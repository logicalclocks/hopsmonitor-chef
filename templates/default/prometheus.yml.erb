global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  <% if @managed_cloud -%>
  external_labels:
    cloud_cluster_id: INSTANCE_ID
  <% end -%>
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['<%= @alertmanagers %>']

rule_files:
  - <%= node['prometheus']['rules_dir'] %>/*

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:<%= node['prometheus']['port'] %>']

  - job_name: 'pushgateway'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    consul_sd_configs:
      - server: localhost:<%= node['consul']['http_api_port'] %>
        scheme: https
        datacenter: lc
        tls_config:
          ca_file: "<%= @hops_ca %>"
          cert_file: "<%= @certificate %>"
          key_file: "<%= @key %>"
          insecure_skip_verify: true

        services: ['prometheus']
        tags: ['pushgateway']

  - job_name: 'airflow'

    scrape_interval:     10s 
    metrics_path:  <%= node['airflow']['config']['webserver']['base_path'] %>/admin/metrics
    consul_sd_configs:
      - server: localhost:<%= node['consul']['http_api_port'] %>
        scheme: https
        datacenter: lc
        tls_config:
          ca_file: "<%= @hops_ca %>"
          cert_file: "<%= @certificate %>"
          key_file: "<%= @key %>"
          insecure_skip_verify: true

        services: ['airflow']
        tags: ['monitoring']
    
  - job_name: 'hadoop'
    scrape_interval:     10s

    consul_sd_configs:
      - server: localhost:<%= node['consul']['http_api_port'] %>
        scheme: https
        datacenter: lc
        tls_config:
          ca_file: "<%= @hops_ca %>"
          cert_file: "<%= @certificate %>"
          key_file: "<%= @key %>"
          insecure_skip_verify: true

        tags: ['monitoring']


  - job_name: 'hopsworks'

    scrape_interval:     10s
    scheme: https
    tls_config:
      insecure_skip_verify: true

    consul_sd_configs:
      - server: localhost:<%= node['consul']['http_api_port'] %>
        scheme: https
        datacenter: lc
        tls_config:
          ca_file: "<%= @hops_ca %>"
          cert_file: "<%= @certificate %>"
          key_file: "<%= @key %>"
          insecure_skip_verify: true

        services: ['glassfish']
        tags: ['monitoring']
  <% if node['install']['kubernetes'] == 'true' && !@managed_cloud -%>
  - job_name: 'knative-controller'
    scrape_interval: 3s
    scrape_timeout: 3s
    kubernetes_sd_configs:
      - role: pod
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]
        action: keep
        regex: knative-serving;controller;metrics
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace,__meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  # Autoscaler endpoint
  - job_name: 'knative-autoscaler'
    scrape_interval: 3s
    scrape_timeout: 3s
    kubernetes_sd_configs:
      - role: pod
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]
        action: keep
        regex: knative-serving;autoscaler;metrics
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace,__meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
  # Activator pods
  - job_name: 'knative-activator'
    scrape_interval: 3s
    scrape_timeout: 3s
    kubernetes_sd_configs:
      - role: pod
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]
        action: keep
        regex: knative-serving;activator;metrics
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
  # Webhook pods
  - job_name: 'knative-webhook'
    scrape_interval: 3s
    scrape_timeout: 3s
    kubernetes_sd_configs:
      - role: pod
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_role, __meta_kubernetes_pod_container_port_name]
        action: keep
        regex: knative-serving;webhook;metrics
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  - job_name: 'knative-queue-proxy'
    scrape_interval: 3s
    scrape_timeout: 3s
    kubernetes_sd_configs:
      - role: pod
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_serving_knative_dev_revision, __meta_kubernetes_pod_container_port_name]
        action: keep
        regex: .+;http-usermetric
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  - job_name: 'kubernetes-cadvisor'
    scrape_interval: 15s
    kubernetes_sd_configs:
      - role: node
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_node_name]
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  - job_name: 'istio-envoy'
    scrape_interval: 15s
    metrics_path: /stats/prometheus
    kubernetes_sd_configs:
      - role: endpoints
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: '.*-envoy-prom'
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/stats/prometheus
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  - job_name: kube-state-metrics
    kubernetes_sd_configs:
      - role: endpoints
        api_server: https://<%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
        tls_config:
          ca_file: <%= @kube_ca %>
          cert_file: <%= @prometheus_kube_crt %>
          key_file: <%= @prometheus_kube_key %>
          insecure_skip_verify: true
    scheme: https
    tls_config:
      ca_file: <%= @kube_ca %>
      cert_file: <%= @prometheus_kube_crt %>
      key_file: <%= @prometheus_kube_key %>
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        action: keep
        regex: kube-state-metrics
      - target_label: __address__
        replacement: <%= @kube_master_ip %>:<%= node['kube-hops']['apiserver']['port'] %>
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number]
        regex: "(.*)+;(.*)+;(.*)"
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/services/${2}:${3}/proxy/metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
  <% end -%>
  <% if node['install']['kubernetes'] == 'false' -%>
  - job_name: 'cadvisor'
    scrape_interval:     10s
    consul_sd_configs:
      - server: localhost:<%= node['consul']['http_api_port'] %>
        scheme: https
        datacenter: lc
        tls_config:
          ca_file: "<%= @hops_ca %>"
          cert_file: "<%= @certificate %>"
          key_file: "<%= @key %>"
          insecure_skip_verify: true

        services: ['cadvisor']
        tags: ['cadvisor']
  <% end -%>
<% if @managed_cloud -%>
remote_write:
  - url: "http://localhost:<%= node['cloud']['metrics']['port'] %>/receive"
    queue_config:
      capacity: <%= node['cloud']['queue_config']['capacity'] %>
      max_samples_per_send: <%= node['cloud']['queue_config']['max_sample_per_send'] %>
      batch_send_deadline: <%= node['cloud']['queue_config']['batch_send_deadline'] %>
<% end -%>
